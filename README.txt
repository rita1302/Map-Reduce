1)mapper.py читает из ratings.dat, выводит <<пользователь + поставленный им рейтинг>>
2)reducer.py читает данные с маппера, далее для каждого пользователя считает средний его рейтинг, выводит: <<пользователь + средний рейтинг>>
3)mapper_1.py читает вывод с редьюсера и сохраняет для каждого пользователя его рейтинг, а также формирует пары фильмов и всех пользователей, котоые смотрели эту пару: выводит <<фильм1 + фильм2 + рейтинг_1 + рейтинг пользователя + рейтинг_2>>
4)reducer_1.py считает матрицу sim (для каждой пары полученных фильмов из маппера)
Кроме того на данном этапе была попытка облегчить работу маппера и создавать пары в редьюсере, однако при таком раскладе программа работает корректно лишь на локальной машине и выдает в качестве результата то же, что и первая версия.
Это происходит из-за того, что мапперов несколько, соответственно в такой ситуации формируются не все пары.
*между данными шагами файл run.py записывается в словарь-файл*
5)mapper_2.py читает из ratings.dat данные о пользователях и возвращает <<пользователь + фильм + оценка>>
6)reducer_2.py получает данные, кроме того использует матрицу sim, выдает рекомендации (финальные).

ЗАПУСК:
	task/src - здесь хранится код функции mapper*.py, reducer*.py
	task/data/input - здесь ratings.dat
	task/data - здесь all_films_big.txt (содержит все названия фильмов), movies.dat
	task - здесь run.py (который создает file_big - словарь, словарь нужно переместить далее в папку data командой: mv file_big data - из task), скрипты run_big.sh, run_big_1.sh, run_big_2.sh
	Команды: *все из task*
	sh run_big.sh # первая м-р задача
	Выход в data/output_big
	sh run_big_1.sh # вторая м-р задача
	Выход в data/output_big_1
	cat data/output_big_1/* | python3 run.py # создание файла file_big
	sh run_big_2.sh # третья м-р задача
	Выход в data/output_big_2

В конце фильмы выведены еще и с предполагаемыми оценками. Дело в том, что из-за различной решения проблемы нуля в знаменателе, ответы могут получиться разные из-за
незначительных различиях в оценках, которые должны быть одинаковыми. Именно поэтому я решила, что лучше показать рейтинги фильмов, которые подойдут пользователю наилучшим образом.
